{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\harsh\\\\Downloads\\\\FaceRecognition-AWS-master (2)\\\\FaceRecognition-AWS-master\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useState, useRef } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst uuid = require('uuid');\nfunction App() {\n  _s();\n  const [uploadResultMessage, setUploadResultMessage] = useState('Please capture an image to authenticate');\n  const [visitorName, setVisitorName] = useState('placeholder.jpeg');\n  const [isAuth, setAuth] = useState(false);\n  const [isAuthFailed, setAuthFailed] = useState(false);\n  const videoRef = useRef(null);\n  const canvasRef = useRef(null);\n  const [stream, setStream] = useState(null);\n\n  // Start camera stream\n  const startCamera = () => {\n    navigator.mediaDevices.getUserMedia({\n      video: true\n    }).then(stream => {\n      videoRef.current.srcObject = stream;\n      setStream(stream); // Save the stream so we can stop it later\n      setAuth(false); // Reset authentication status\n      setAuthFailed(false); // Reset failure status\n      setUploadResultMessage('Please capture an image to authenticate');\n    }).catch(err => {\n      console.error('Error accessing camera: ', err);\n    });\n  };\n\n  // Stop the camera stream\n  const stopCamera = () => {\n    if (stream) {\n      stream.getTracks().forEach(track => track.stop());\n      setStream(null);\n    }\n  };\n\n  // Capture image from video stream\n  const captureImage = e => {\n    e.preventDefault();\n    const canvas = canvasRef.current;\n    const context = canvas.getContext('2d');\n    context.drawImage(videoRef.current, 0, 0, canvas.width, canvas.height);\n    canvas.toBlob(blob => {\n      const visitorImageName = uuid.v4();\n      setVisitorName(`${visitorImageName}.jpeg`);\n      sendImageToAWS(blob, visitorImageName);\n    }, 'image/jpeg');\n  };\n\n  // Send captured image to AWS\n  const sendImageToAWS = (imageBlob, visitorImageName) => {\n    fetch(`https://48cc83boci.execute-api.us-east-1.amazonaws.com/dev/pjt-visitor-image-storage/${visitorImageName}.jpeg`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'image/jpeg'\n      },\n      body: imageBlob\n    }).then(async () => {\n      const response = await authenticate(visitorImageName);\n      if (response.Message === 'Success') {\n        setAuth(true);\n        setUploadResultMessage(`Hi ${response['firstName']} ${response['lastName']}, welcome to work`);\n        stopCamera(); // Stop camera feed on successful authentication\n      } else {\n        setAuthFailed(true);\n        setUploadResultMessage('Authentication Failed. Please try again.');\n      }\n    }).catch(error => {\n      setAuthFailed(true);\n      setUploadResultMessage('There is an error in the authentication process. Try again later.');\n      console.error(error);\n    });\n  };\n\n  // Authenticate the image with AWS\n  async function authenticate(visitorImageName) {\n    const requestUrl = `https://48cc83boci.execute-api.us-east-1.amazonaws.com/dev/employee?${new URLSearchParams({\n      objectKey: `${visitorImageName}.jpeg`\n    })}`;\n    return await fetch(requestUrl, {\n      method: 'GET',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json'\n      }\n    }).then(response => response.json()).then(data => data).catch(error => console.error(error));\n  }\n\n  // Restart the entire authentication process\n  const restartAuthentication = () => {\n    startCamera(); // Start the camera again\n    setVisitorName('placeholder.jpeg');\n    setUploadResultMessage('Please capture an image to authenticate');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"FACIAL RECOGNITION SYSTEM\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), !isAuth && !isAuthFailed && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: startCamera,\n        children: \"Start Camera\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"video\", {\n        ref: videoRef,\n        autoPlay: true,\n        width: 250,\n        height: 250\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n        ref: canvasRef,\n        style: {\n          display: 'none'\n        },\n        width: 250,\n        height: 250\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: captureImage,\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Capture & Authenticate\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: isAuth ? 'success bold-welcome' : 'failure',\n      children: uploadResultMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this), isAuth && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: restartAuthentication,\n      children: \"Restart Authentication\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 9\n    }, this), isAuthFailed && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: startCamera,\n      children: \"Try Again\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 9\n    }, this), visitorName !== 'placeholder.jpeg' && /*#__PURE__*/_jsxDEV(\"img\", {\n      src: `https://your-s3-bucket-name.s3.amazonaws.com/${visitorName}`,\n      alt: \"Visitor\",\n      height: 250,\n      width: 250\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"npyW+iIcIqUxMmcpz8ylcxWwKc0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useRef","jsxDEV","_jsxDEV","Fragment","_Fragment","uuid","require","App","_s","uploadResultMessage","setUploadResultMessage","visitorName","setVisitorName","isAuth","setAuth","isAuthFailed","setAuthFailed","videoRef","canvasRef","stream","setStream","startCamera","navigator","mediaDevices","getUserMedia","video","then","current","srcObject","catch","err","console","error","stopCamera","getTracks","forEach","track","stop","captureImage","e","preventDefault","canvas","context","getContext","drawImage","width","height","toBlob","blob","visitorImageName","v4","sendImageToAWS","imageBlob","fetch","method","headers","body","response","authenticate","Message","requestUrl","URLSearchParams","objectKey","Accept","json","data","restartAuthentication","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","ref","autoPlay","style","display","onSubmit","type","src","alt","_c","$RefreshReg$"],"sources":["C:/Users/harsh/Downloads/FaceRecognition-AWS-master (2)/FaceRecognition-AWS-master/src/App.js"],"sourcesContent":["import { useState, useRef } from 'react';\nimport './App.css';\nconst uuid = require('uuid');\n\nfunction App() {\n  const [uploadResultMessage, setUploadResultMessage] = useState('Please capture an image to authenticate');\n  const [visitorName, setVisitorName] = useState('placeholder.jpeg');\n  const [isAuth, setAuth] = useState(false);\n  const [isAuthFailed, setAuthFailed] = useState(false);\n  const videoRef = useRef(null);\n  const canvasRef = useRef(null);\n  const [stream, setStream] = useState(null);\n\n  // Start camera stream\n  const startCamera = () => {\n    navigator.mediaDevices\n      .getUserMedia({ video: true })\n      .then((stream) => {\n        videoRef.current.srcObject = stream;\n        setStream(stream);  // Save the stream so we can stop it later\n        setAuth(false);     // Reset authentication status\n        setAuthFailed(false); // Reset failure status\n        setUploadResultMessage('Please capture an image to authenticate');\n      })\n      .catch((err) => {\n        console.error('Error accessing camera: ', err);\n      });\n  };\n\n  // Stop the camera stream\n  const stopCamera = () => {\n    if (stream) {\n      stream.getTracks().forEach(track => track.stop());\n      setStream(null);\n    }\n  };\n\n  // Capture image from video stream\n  const captureImage = (e) => {\n    e.preventDefault();\n    const canvas = canvasRef.current;\n    const context = canvas.getContext('2d');\n    context.drawImage(videoRef.current, 0, 0, canvas.width, canvas.height);\n\n    canvas.toBlob((blob) => {\n      const visitorImageName = uuid.v4();\n      setVisitorName(`${visitorImageName}.jpeg`);\n      sendImageToAWS(blob, visitorImageName);\n    }, 'image/jpeg');\n  };\n\n  // Send captured image to AWS\n  const sendImageToAWS = (imageBlob, visitorImageName) => {\n    fetch(`https://48cc83boci.execute-api.us-east-1.amazonaws.com/dev/pjt-visitor-image-storage/${visitorImageName}.jpeg`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'image/jpeg',\n      },\n      body: imageBlob,\n    })\n      .then(async () => {\n        const response = await authenticate(visitorImageName);\n        if (response.Message === 'Success') {\n          setAuth(true);\n          setUploadResultMessage(`Hi ${response['firstName']} ${response['lastName']}, welcome to work`);\n          stopCamera(); // Stop camera feed on successful authentication\n        } else {\n          setAuthFailed(true);\n          setUploadResultMessage('Authentication Failed. Please try again.');\n        }\n      })\n      .catch((error) => {\n        setAuthFailed(true);\n        setUploadResultMessage('There is an error in the authentication process. Try again later.');\n        console.error(error);\n      });\n  };\n\n  // Authenticate the image with AWS\n  async function authenticate(visitorImageName) {\n    const requestUrl = `https://48cc83boci.execute-api.us-east-1.amazonaws.com/dev/employee?${new URLSearchParams({\n      objectKey: `${visitorImageName}.jpeg`,\n    })}`;\n    return await fetch(requestUrl, {\n      method: 'GET',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n      },\n    })\n      .then((response) => response.json())\n      .then((data) => data)\n      .catch((error) => console.error(error));\n  }\n\n  // Restart the entire authentication process\n  const restartAuthentication = () => {\n    startCamera();  // Start the camera again\n    setVisitorName('placeholder.jpeg');\n    setUploadResultMessage('Please capture an image to authenticate');\n  };\n\n  return (\n    <div className=\"App\">\n      <h2>FACIAL RECOGNITION SYSTEM</h2>\n\n      {!isAuth && !isAuthFailed && (\n        <>\n          <button onClick={startCamera}>Start Camera</button>\n          <video ref={videoRef} autoPlay width={250} height={250} />\n          <canvas ref={canvasRef} style={{ display: 'none' }} width={250} height={250} />\n          <form onSubmit={captureImage}>\n            <button type=\"submit\">Capture & Authenticate</button>\n          </form>\n        </>\n      )}\n\n      {/* Display message */}\n      <div className={isAuth ? 'success bold-welcome' : 'failure'}>{uploadResultMessage}</div>\n\n      {/* Show \"Restart\" button if authentication succeeded */}\n      {isAuth && (\n        <button onClick={restartAuthentication}>Restart Authentication</button>\n      )}\n\n      {/* Show \"Try Again\" button if authentication failed */}\n      {isAuthFailed && (\n        <button onClick={startCamera}>Try Again</button>\n      )}\n\n      {/* Display the captured image */}\n      {visitorName !== 'placeholder.jpeg' && (\n        <img src={`https://your-s3-bucket-name.s3.amazonaws.com/${visitorName}`} alt=\"Visitor\" height={250} width={250} />\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}